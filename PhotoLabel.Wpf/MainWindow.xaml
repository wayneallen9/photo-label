<Window x:Class="PhotoLabel.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:PhotoLabel.Wpf;assembly=PhotoLabel.Wpf"
        xmlns:localControls="clr-namespace:PhotoLabel.Wpf.Controls"
        xmlns:grayscale="clr-namespace:GrayscaleEffect;assembly=GrayscaleEffect"
        mc:Ignorable="d"
        WindowState="{Binding Path=WindowState, Mode=TwoWay}"
        Title="{Binding Path=Title}" Height="450" Width="800" Icon="pack://application:,,,/Resources/camera.png">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Path=ExitCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenCommand}" Key="O" Modifiers="Control"></KeyBinding>
        <KeyBinding Command="{Binding Path=SaveCommand}" Key="S" Modifiers="Control"></KeyBinding>
        <KeyBinding Command="{Binding Path=ExitCommand}" Key="X" Modifiers="Control"></KeyBinding>
    </Window.InputBindings>
    <Window.Resources>
        <BitmapImage x:Key="BoldImageSource" UriSource="pack://application:,,,/Resources/bold.png"></BitmapImage>
        <BitmapImage x:Key="BottomCentreImageSource" UriSource="pack://application:,,,/Resources/bottomcentre.png"></BitmapImage>
        <BitmapImage x:Key="BottomLeftImageSource" UriSource="pack://application:,,,/Resources/bottomleft.png"></BitmapImage>
        <BitmapImage x:Key="BottomRightImageSource" UriSource="pack://application:,,,/Resources/bottomright.png"></BitmapImage>
        <BitmapImage x:Key="CloseImageSource" UriSource="pack://application:,,,/Resources/close.png"></BitmapImage>
        <BitmapImage x:Key="DeleteImageSource" UriSource="pack://application:,,,/Resources/delete.png"></BitmapImage>
        <BitmapImage x:Key="MiddleLeftImageSource" UriSource="pack://application:,,,/Resources/middleleft.png"></BitmapImage>
        <BitmapImage x:Key="MiddleRightImageSource" UriSource="pack://application:,,,/Resources/middleright.png"></BitmapImage>
        <BitmapImage x:Key="NextImageSource" UriSource="pack://application:,,,/Resources/next.png"></BitmapImage>
        <BitmapImage x:Key="OpenImageSource" UriSource="pack://application:,,,/Resources/open.png"></BitmapImage>
        <BitmapImage x:Key="RotateLeftImageSource" UriSource="pack://application:,,,/Resources/rotateleft.png"></BitmapImage>
        <BitmapImage x:Key="RotateRightImageSource" UriSource="pack://application:,,,/Resources/rotateright.png"></BitmapImage>
        <BitmapImage x:Key="SaveImageSource" UriSource="pack://application:,,,/Resources/save.png"></BitmapImage>
        <BitmapImage x:Key="SaveAsImageSource" UriSource="pack://application:,,,/Resources/saveas.png"></BitmapImage>
        <BitmapImage x:Key="TopCentreImageSource" UriSource="pack://application:,,,/Resources/topcentre.png"></BitmapImage>
        <BitmapImage x:Key="TopLeftImageSource" UriSource="pack://application:,,,/Resources/topleft.png"></BitmapImage>
        <BitmapImage x:Key="TopRightImageSource" UriSource="pack://application:,,,/Resources/topright.png"></BitmapImage>
        <BitmapImage x:Key="WorldImageSource" UriSource="pack://application:,,,/Resources/world.png"></BitmapImage>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter"></BooleanToVisibilityConverter>
        <CollectionViewSource Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}" x:Key="Fonts"></CollectionViewSource>
        <ControlTemplate x:Key="SizeValidation">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Border Grid.Row="0">
                    <AdornedElementPlaceholder />
                </Border>
                <Label Grid.Row="1" Background="Red" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center">Value is not numeric</Label>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="5,0,0,5"></Setter>
        </Style>
        <Style x:Key="ColorPicker" TargetType="{x:Type wpfToolkit:ColorPicker}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="ShowDropDownButton" Value="False"></Setter>
            <Setter Property="Width" Value="20"></Setter>
        </Style>
        <Style x:Key="GridAlignment" TargetType="{x:Type Grid}">
            <Style.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Height" Value="24"></Setter>
                    <Setter Property="Width" Value="24"></Setter>
                </Style>
            </Style.Resources>
            <Setter Property="Margin" Value="0,10,0,0"></Setter>
        </Style>
        <Style x:Key="GridImage" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="Black"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style x:Key="FontComboBox" TargetType="{x:Type ComboBox}">
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Height" Value="32"></Setter>
                </Style>
            </Style.Resources>
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="MinWidth" Value="150"></Setter>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style x:Key="LabelFilename" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
        </Style>
        <Style x:Key="ListViewQuickCaptions" TargetType="{x:Type ListView}">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Margin" Value="0,7,0,0"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
        </Style>
        <Style x:Key="SizeComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="MinWidth" Value="30"></Setter>
        </Style>
        <Style TargetType="{x:Type GridSplitter}">
            <Setter Property="Background" Value="{x:Static SystemColors.GradientInactiveCaptionBrush}"></Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Style.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.2"></Setter>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Height" Value="16"></Setter>
                    <Setter Property="Width" Value="16"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="80"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style TargetType="{x:Type ToolBar}">
            <Style.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.2"></Setter>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Height" Value="16"></Setter>
                    <Setter Property="Width" Value="16"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="TransparencyComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="MinWidth" Value="50"></Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Command="{Binding Path=OpenCommand}" Header="_Open..." InputGestureText="Ctrl+O" ToolTip="Open Folder">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource OpenImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding Path=CloseCommand}" Header="_Close..." ToolTip="Close Folder">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource CloseImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Command="{Binding Path=SaveCommand}" Header="_Save" InputGestureText="Ctrl+S" ToolTip="Save">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource SaveImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding Path=SaveAsCommand}" Header="Save _As..." ToolTip="Save As">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource SaveAsImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding Path=DeleteCommand}" Header="Delete _Caption" ToolTip="Delete Caption">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource DeleteImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="_Recently Used" ItemsSource="{Binding Path=RecentlyUsedDirectories}">
                    <MenuItem.ItemContainerStyle>
                        <Style>
                            <Setter Property="MenuItem.Command" Value="{Binding Path=DataContext.OpenRecentlyUsedDirectoryCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"></Setter>
                            <Setter Property="MenuItem.CommandParameter" Value="{Binding Path=Path}"></Setter>
                            <Setter Property="MenuItem.Header" Value="{Binding Path=Caption}"></Setter>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator Visibility="{Binding Path=HasRecentlyUsedDirectories, Converter={StaticResource VisibilityConverter}}"></Separator>
                <MenuItem Command="{Binding Path=ExitCommand}" Header="E_xit" InputGestureText="Ctrl+X"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Command="{Binding Path=RotateLeftCommand}" Header="Rotate _Left" ToolTip="Rotate Left">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource RotateLeftImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding Path=RotateRightCommand}" Header="Rotate _Right" ToolTip="Rotate Right">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource RotateRightImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar>
                <Button ToolBar.OverflowMode="Never" Command="{Binding Path=OpenCommand}" ToolTip="Open Folder">
                    <Image x:Name="ToolBarOpen" Source="{StaticResource OpenImageSource}"></Image>
                </Button>
                <Button Command="{Binding Path=CloseCommand}" ToolTip="Close Folder">
                    <Image Source="{StaticResource CloseImageSource}"></Image>
                </Button>
            </ToolBar>
            <ToolBar DataContext="{Binding SelectedImageViewModel}">
                <ComboBox ToolBar.OverflowMode="Never" ItemsSource="{Binding Source={StaticResource Fonts}}" SelectedItem="{Binding Path=FontFamily}" Style="{StaticResource FontComboBox}" ToolTip="Font">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel></VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontFamily="{Binding}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Validation.ErrorTemplate="{StaticResource SizeValidation}" ToolBar.OverflowMode="Never" IsEditable="True" Style="{StaticResource SizeComboBox}" Text="{Binding FontSize}" ToolTip="Font Size">
                    <ComboBoxItem>10</ComboBoxItem>
                    <ComboBoxItem>12</ComboBoxItem>
                    <ComboBoxItem>16</ComboBoxItem>
                    <ComboBoxItem>24</ComboBoxItem>
                    <ComboBoxItem>48</ComboBoxItem>
                </ComboBox>
                <ComboBox Style="{StaticResource SizeComboBox}" Text="{Binding Path=FontType}" ToolTip="Font Measurement">
                    <ComboBoxItem>%</ComboBoxItem>
                    <ComboBoxItem>pts</ComboBoxItem>
                </ComboBox>
                <ToggleButton IsChecked="{Binding Path=FontBold}" ToolTip="Bold">
                    <Image Source="{StaticResource BoldImageSource}"></Image>
                </ToggleButton>
                <wpfToolkit:ColorPicker AvailableColorsSortingMode="HueSaturationBrightness" BorderThickness="0" DisplayColorTooltip="False" ShowRecentColors="True" SelectedColor="{Binding Path=ForeColor, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ColorPicker}" ToolTip="Color"></wpfToolkit:ColorPicker>
                <Separator></Separator>
                <wpfToolkit:ColorPicker AvailableColorsSortingMode="HueSaturationBrightness" BorderThickness="0" DisplayColorTooltip="False" ShowRecentColors="True" SelectedColor="{Binding Path=BackColor, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ColorPicker}" ToolTip="Background Color"></wpfToolkit:ColorPicker>
                <ComboBox IsEditable="True" Style="{StaticResource TransparencyComboBox}" Text="{Binding Path=BackColorOpacity}" ToolTip="Background Opacity">
                    <ComboBoxItem>Off</ComboBoxItem>
                    <ComboBoxItem Opacity="0.25">25%</ComboBoxItem>
                    <ComboBoxItem Opacity="0.5">50%</ComboBoxItem>
                    <ComboBoxItem Opacity="0.75">75%</ComboBoxItem>
                    <ComboBoxItem>100%</ComboBoxItem>
                </ComboBox>
                <Separator></Separator>
                <Button Command="{Binding Path=DataContext.RotateLeftCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Rotate Left">
                    <Image Source="{StaticResource RotateLeftImageSource}"></Image>
                </Button>
                <Button Command="{Binding Path=DataContext.RotateRightCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Rotate Right">
                    <Image Source="{StaticResource RotateRightImageSource}"></Image>
                </Button>
                <Separator></Separator>
                <ComboBox IsEditable="False" Text="{Binding Path=DataContext.ImageFormat, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Image Format">
                    <ComboBoxItem>Bmp</ComboBoxItem>
                    <ComboBoxItem>Jpeg</ComboBoxItem>
                    <ComboBoxItem>Png</ComboBoxItem>
                </ComboBox>
                <Button  Command="{Binding Path=DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Save">
                    <Image Source="{StaticResource SaveImageSource}"></Image>
                </Button>
                <Button  Command="{Binding Path=DataContext.SaveAsCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Save As">
                    <Image Source="{StaticResource SaveAsImageSource}"></Image>
                </Button>
                <Button Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Delete Caption">
                    <Image Source="{StaticResource DeleteImageSource}"></Image>
                </Button>
                <Button Command="{Binding Path=DataContext.NextCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Next">
                    <Image Source="{StaticResource NextImageSource}"></Image>
                </Button>
                <Separator></Separator>
                <Button Command="{Binding Path=DataContext.WhereCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" ToolTip="Where Is This?">
                    <Image Source="{StaticResource WorldImageSource}"></Image>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Visibility="{Binding HasStatus, Converter={StaticResource VisibilityConverter}}">
                <Label Content="{Binding Path=Status}"></Label>
            </StatusBarItem>
            <Separator Visibility="{Binding HasStatus, Converter={StaticResource VisibilityConverter}}"></Separator>
            <StatusBarItem>
                <Label Content="{Binding Path=OutputPath}"></Label>
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Stretch" Visibility="{Binding Path=ProgressVisible, Converter={StaticResource VisibilityConverter}}">
                <ProgressBar Maximum="100" Minimum="0" Value="{Binding Path=Progress}"></ProgressBar>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Grid.Row="0" DataContext="{Binding Path=SelectedImageViewModel}" Style="{StaticResource GridImage}">
                    <Image HorizontalAlignment="Center" Source="{Binding Path=Image}" Stretch="{Binding Path=ImageStretch}" VerticalAlignment="Center"></Image>
                </Grid>
                <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" ShowsPreview="True" VerticalAlignment="Stretch" Width="2"></GridSplitter>
                <ListView Grid.Column="2" Grid.Row="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.ScrollChanged="ListViewImages_OnScrollChanged"  ItemsSource="{Binding Images}" Name="ListViewImages" Padding="0" SelectedIndex="{Binding Path=SelectedIndex,Mode=OneWayToSource}" SelectedItem="{Binding Path=SelectedImageViewModel}" SelectionChanged="ListViewImages_OnSelectionChanged" SelectionMode="Single" SizeChanged="ListViewImages_OnSizeChanged">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="Black" Height="128" Width="128">
                                <Image HorizontalAlignment="Center" Source="{Binding Path=Preview}" Stretch="None" ToolTip="{Binding Path=Filename}" VerticalAlignment="Center"></Image>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <Grid DataContext="{Binding Path=SelectedImageViewModel}" Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="100"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Content="{Binding Path=Filename}" Style="{StaticResource LabelFilename}" ToolTip="{Binding Path=Filename}"></Label>
                <TextBox Grid.Column="0" Grid.Row="1" AcceptsReturn="True" Text="{Binding Path=Caption, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"></TextBox>
                <Grid Grid.Column="1" Grid.Row="1" Style="{DynamicResource GridAlignment}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="24"></ColumnDefinition>
                        <ColumnDefinition Width="24"></ColumnDefinition>
                        <ColumnDefinition Width="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                    </Grid.RowDefinitions>
                    <ToggleButton Grid.Column="0" Grid.Row="0" IsChecked="{Binding Path=IsTopLeftAlignment}">
                        <Image Source="{StaticResource TopLeftImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="1" Grid.Row="0" IsChecked="{Binding Path=IsTopCentreAlignment}">
                        <Image Source="{StaticResource TopCentreImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="2" Grid.Row="0" IsChecked="{Binding Path=IsTopRightAlignment}">
                        <Image Source="{StaticResource TopRightImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="0" Grid.Row="1" IsChecked="{Binding Path=IsMiddleLeftAlignment}">
                        <Image Source="{StaticResource MiddleLeftImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="1" Grid.Row="1" IsChecked="{Binding Path=IsMiddleCentreAlignment}">
                    </ToggleButton>
                    <ToggleButton Grid.Column="2" Grid.Row="1" IsChecked="{Binding Path=IsMiddleRightAlignment}">
                        <Image Source="{StaticResource MiddleRightImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="0" Grid.Row="2" IsChecked="{Binding Path=IsBottomLeftAlignment}">
                        <Image Source="{StaticResource BottomLeftImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="1" Grid.Row="2" IsChecked="{Binding Path=IsBottomCentreAlignment}">
                        <Image Source="{StaticResource BottomCentreImageSource}"></Image>
                    </ToggleButton>
                    <ToggleButton Grid.Column="2" Grid.Row="2" IsChecked="{Binding Path=IsBottomRightAlignment}">
                        <Image Source="{StaticResource BottomRightImageSource}"></Image>
                    </ToggleButton>
                </Grid>
                <ListView Grid.Column="2" Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Path=DataContext.QuickCaptions, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" Style="{StaticResource ListViewQuickCaptions}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel></WrapPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=DataContext.SetCaptionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}" CommandParameter="{Binding}" Content="{Binding}"></Button>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <CheckBox Grid.Column="0" Grid.Row="2" IsChecked="{Binding Path=AppendDateTakenToCaption}" Visibility="{Binding Path=DataContext.HasDateTaken, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}">
                    <TextBlock Text="{Binding Path=DateTaken, StringFormat={}Append {0}?}"></TextBlock>
                </CheckBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>