<Window x:Class="PhotoLabel.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:PhotoLabel.Wpf"
        xmlns:localControls="clr-namespace:PhotoLabel.Wpf.Controls"
        mc:Ignorable="d"
        WindowState="{Binding Path=WindowState, Mode=TwoWay}"
        Title="{Binding Path=Title}" Height="450" Width="800" Icon="pack://application:,,,/Resources/camera.png">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Path=ExitCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenCommand}" Key="O" Modifiers="Control"></KeyBinding>
        <KeyBinding Command="{Binding Path=ExitCommand}" Key="X" Modifiers="Control"></KeyBinding>
    </Window.InputBindings>
    <Window.Resources>
        <BitmapImage x:Key="BoldImageSource" UriSource="pack://application:,,,/Resources/bold.png"></BitmapImage>
        <BitmapImage x:Key="OpenImageSource" UriSource="pack://application:,,,/Resources/open.png"></BitmapImage>
        <BitmapImage x:Key="RotateLeftImageSource" UriSource="pack://application:,,,/Resources/rotateleft.png"></BitmapImage>
        <BitmapImage x:Key="RotateRightImageSource" UriSource="pack://application:,,,/Resources/rotateright.png"></BitmapImage>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter"></BooleanToVisibilityConverter>
        <CollectionViewSource Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}" x:Key="Fonts"></CollectionViewSource>
        <ControlTemplate x:Key="SizeValidation">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Border Grid.Row="0">
                    <AdornedElementPlaceholder />
                </Border>
                <Label Grid.Row="1" Background="Red" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center">Value is not numeric</Label>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ColorPicker" TargetType="{x:Type wpfToolkit:ColorPicker}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="ShowDropDownButton" Value="False"></Setter>
            <Setter Property="Width" Value="20"></Setter>
        </Style>
        <Style x:Key="GridEditor">
            <Style.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="Black"></Setter>
                    <Setter Property="Margin" Value="5"></Setter>
                </Style>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Margin" Value="5,0,5,0"></Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Height" Value="80"></Setter>
                    <Setter Property="Margin" Value="5"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="FontComboBox" TargetType="{x:Type ComboBox}">
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Height" Value="32"></Setter>
                </Style>
            </Style.Resources>
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="MinWidth" Value="150"></Setter>
        </Style>
        <Style x:Key="SizeComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="MinWidth" Value="30"></Setter>
        </Style>
        <Style x:Key="TransparencyComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="MinWidth" Value="50"></Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Click="MenuOpen_Click" Header="_Open..." Name="MenuOpen">
                    <MenuItem.Icon>
                        <Image Source="{StaticResource OpenImageSource}"></Image>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="_Recently Used" ItemsSource="{Binding Path=RecentlyUsedDirectories}">
                    <MenuItem.ItemContainerStyle>
                        <Style>
                            <Setter Property="MenuItem.Command" Value="{Binding Path=DataContext.OpenRecentlyUsedDirectoryCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"></Setter>
                            <Setter Property="MenuItem.CommandParameter" Value="{Binding Path=Path}"></Setter>
                            <Setter Property="MenuItem.Header" Value="{Binding Path=Caption}"></Setter>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator Visibility="{Binding Path=HasRecentlyUsedDirectories, Converter={StaticResource VisibilityConverter}}"></Separator>
                <MenuItem Command="{Binding Path=ExitCommand}" Header="E_xit"></MenuItem>
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar>
                <Button ToolBar.OverflowMode="Never" Name="ButtonOpen" Click="ButtonOpen_Click">
                    <Image x:Name="ToolBarOpen" Height="16" Source="{StaticResource OpenImageSource}" Width="16"></Image>
                </Button>
            </ToolBar>
            <ToolBar DataContext="{Binding SelectedImageViewModel}">
                <ComboBox ToolBar.OverflowMode="Never" ItemsSource="{Binding Source={StaticResource Fonts}}" SelectedItem="{Binding Path=FontName}" Style="{StaticResource FontComboBox}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel></VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontFamily="{Binding}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Validation.ErrorTemplate="{StaticResource SizeValidation}" ToolBar.OverflowMode="Never" IsEditable="True" Style="{StaticResource SizeComboBox}" Text="{Binding FontSize}">
                    <ComboBoxItem>10</ComboBoxItem>
                    <ComboBoxItem>12</ComboBoxItem>
                    <ComboBoxItem>16</ComboBoxItem>
                    <ComboBoxItem>24</ComboBoxItem>
                    <ComboBoxItem>48</ComboBoxItem>
                </ComboBox>
                <ComboBox Style="{StaticResource SizeComboBox}" Text="{Binding Path=FontType}">
                    <ComboBoxItem>%</ComboBoxItem>
                    <ComboBoxItem>pts</ComboBoxItem>
                </ComboBox>
                <ToggleButton IsChecked="{Binding Path=FontBold}" ToolTip="Bold">
                    <Image Source="{StaticResource BoldImageSource}"></Image>
                </ToggleButton>
                <wpfToolkit:ColorPicker AvailableColorsSortingMode="HueSaturationBrightness" BorderThickness="0" DisplayColorTooltip="False" ShowRecentColors="True" SelectedColor="{Binding Path=ForeColor, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ColorPicker}" ToolTip="Color"></wpfToolkit:ColorPicker>
                <Separator></Separator>
                <wpfToolkit:ColorPicker AvailableColorsSortingMode="HueSaturationBrightness" BorderThickness="0" DisplayColorTooltip="False" ShowRecentColors="True" SelectedColor="{Binding Path=BackColor, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ColorPicker}" ToolTip="Background Color"></wpfToolkit:ColorPicker>
                <ComboBox IsEditable="True" Style="{StaticResource TransparencyComboBox}" Text="{Binding Path=BackColorOpacity}" ToolTip="Background Opacity">
                    <ComboBoxItem>Off</ComboBoxItem>
                    <ComboBoxItem Opacity="0.25">25%</ComboBoxItem>
                    <ComboBoxItem Opacity="0.5">50%</ComboBoxItem>
                    <ComboBoxItem Opacity="0.75">75%</ComboBoxItem>
                    <ComboBoxItem>100%</ComboBoxItem>
                </ComboBox>
                <Separator></Separator>
                <Button Command="{Binding Path=RotateLeftCommand}" ToolTip="Rotate Left">
                    <Image Height="16" Source="{StaticResource RotateLeftImageSource}" Width="16"></Image>
                </Button>
                <Button Command="{Binding Path=RotateRightCommand}" ToolTip="Rotate Right">
                    <Image Height="16" Source="{StaticResource RotateRightImageSource}" Width="16"></Image>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <Label Content="{Binding Path=Status}"></Label>
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Stretch" Visibility="{Binding Path=ProgressVisible, Converter={StaticResource VisibilityConverter}}">
                <ProgressBar Maximum="100" Minimum="0" Value="{Binding Path=Progress}"></ProgressBar>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" DataContext="{Binding Path=SelectedImageViewModel}" Style="{StaticResource GridEditor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="100"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Image HorizontalAlignment="Center" Source="{Binding Path=Image}" Stretch="{Binding Path=ImageStretch}" VerticalAlignment="Center"></Image>
                </Grid>
                <Label Grid.Row="1" Content="{Binding Path=Filename}" ToolTip="{Binding Path=Filename}"></Label>
                <TextBox Grid.Row="2" AcceptsReturn="True" Text="{Binding Path=Caption, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"></TextBox>
            </Grid>
            <GridSplitter Background="Black" Grid.Column="1" HorizontalAlignment="Center" ShowsPreview="True" VerticalAlignment="Stretch" Width="2"></GridSplitter>
            <localControls:ListView Grid.Column="2" ItemsSource="{Binding Images}" Padding="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedIndex="{Binding Path=SelectedIndex,Mode=OneWayToSource}" SelectedItem="{Binding Path=SelectedImageViewModel}" SelectionMode="Single">
                <i:Interaction.Triggers>
                    <local:RoutedEventTrigger RoutedEvent="ScrollViewer.ScrollChanged">
                        <i:InvokeCommandAction Command="{Binding Path=ScrollCommand}" />
                    </local:RoutedEventTrigger>
                </i:Interaction.Triggers>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Margin="0" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="Black" Height="128" Width="128">
                            <Image HorizontalAlignment="Center" Source="{Binding Path=Preview}" Stretch="None" ToolTip="{Binding Path=Filename}" VerticalAlignment="Center"></Image>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </localControls:ListView>
        </Grid>
    </DockPanel>
</Window>
